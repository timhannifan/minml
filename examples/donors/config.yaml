model_comment: 'donors choose example'
input_path: "../../examples/donors/data_small.csv"
project_path: "../../examples/donors/"
output_path: "../../examples/donors/results.csv"
viz_path: "../../examples/donors/visualization/"
generate_graphs: True

random_seed: 23895478

user_metadata:
  author: 'Tim Hannifan'
  etl_date: '2019-06-02'

temporal_config:
    start_time: '2012-01-01'
    end_time: '2014-01-01'
    prediction_windows: [6]
    model_update_frequency: 6
    unknown_outcome_gap: 60
    aggregation_lengths: [6]

label_config:
    name: 'not_funded'
    include_missing_labels_in_train_as: False

model_config:
    'sklearn.tree.DecisionTreeClassifier':
        min_samples_split: [0.05, 0.1 ]
        max_depth: [1,5,10]
    'sklearn.svm.LinearSVC':
        penalty: [l1,l2]
        C: [0.01,0.1,1.0,10.0]
    'sklearn.linear_model.LogisticRegression':
        penalty: [l2]
        C: [0.01, 0.1, 1.0]
        solver: [sag]
        n_jobs: [-1]
    'sklearn.ensemble.BaggingClassifier':
        n_estimators: [100,200]
        max_samples: [10,20]
    # 'sklearn.ensemble.ExtraTreesClassifier':
    #     n_estimators: [3]
    #     criterion: [entropy]
    #     max_depth: [5,10]
    #     min_samples_split: [0.05, 0.1]
    'sklearn.neighbors.KNeighborsClassifier':
        n_neighbors: [5,10]
        weights: [uniform, distance]
        metric: ["euclidean", "manhattan"]

scoring:
  testing_metric_groups:
    -
      metrics: ['precision', 'recall']
      thresholds:
        percentiles: [10.0,20.0]
        top_n: [10]
  training_metric_groups:
    -
      metrics: ['accuracy']
    -
      metrics: ['precision', 'recall']
      thresholds:
        percentiles: [1.0, 10.0, 50.0]
        top_n: [10]

feature_generation:
    -
        categoricals:
            -
                column: 'poverty'
            -
                column: 'grade'
    -
        numeric:
            -
                column: 'price'
                imputation:
                    sum:
                        type: 'null_category'
                    choice_query: 'select distinct poverty from semantic.entities'
                metrics:
                    - 'sum'
                scale: True
